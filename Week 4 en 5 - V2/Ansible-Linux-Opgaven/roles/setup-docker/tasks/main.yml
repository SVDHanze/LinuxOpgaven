---
# This task updates and upgrades the remote.
# name - define name of task.
# become - we need sudo privileges, so we set for this field value "yes".
# apt - uses the apt command on the remote to install packages.

- name: Updating & Upgrading Remote
  become: yes
  apt:
    upgrade: yes
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600

# To install Docker, Aptitude will be used.
# In these steps the required packages to run Docker will be installed.
# Whereafter Docker itself will be installed and a container will be started.

- name: Install Aptitude
  apt:
      name: aptitude
      state: latest
      update_cache: no

- name: Install required system packages for Dockers
  become: yes
  apt: 
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
      - libcurl4
    state: latest
    update_cache: no

# This step adds an apt key, to ensure the authentication of the Docker packages.

- name: Add Docker GPG apt Key
  apt_key:
      url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
      state: present

# Downloads and links Docker from its online repository and installs it.

- name: Add Docker Repository
  apt_repository:
      repo: deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release|lower }} stable
      state: present
      update_cache: no

- name: Update apt and install Docker-ce
  apt:
      name: docker-ce
      state: latest
      update_cache: no

# Pipx will be installed to install the Docker module for Python.

- name: Install Pipx
  become: true
  apt:
      name: pipx
      state: latest
      update_cache: no

- name: Install Docker Module for Python
  community.general.pipx:
        name: docker
        install_deps: true

# Starts the container with the variables written in the defaults folder.

- name: Pull default Docker image
  community.docker.docker_image:
      name: "{{ default_container_image }}"
      source: pull

- name: Create default containers
  community.docker.docker_container:
      name: "{{ default_container_name }}{{ item }}"
      image: "{{ default_container_image }}"
      command: "{{ default_container_command }}"
      state: present
  with_sequence: count={{ container_count }}
