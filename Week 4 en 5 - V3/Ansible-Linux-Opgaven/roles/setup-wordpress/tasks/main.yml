---
# This task updates and upgrades the remote.
# name - define name of task.
# become - we need sudo privileges, so we set for this field value "yes".
# apt - uses the apt command on the remote to install packages.

- name: Updating & Upgrading Remote
  become: yes
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 3600

# In these steps the packages for the WordPress server will be installed.

- name: Installing required software for WordPress
  become: yes
  apt:
    name: 
      - apache2
      - mariadb-server
      - php
      - python3-mysqldb

- name: Installing additional extensions for PHP
  become: yes
  apt:
    name: 
      - php-mysql
      - php-curl
      - libapache2-mod-php

# A standard MySql database and user will be created in case the WordPress user doesn't work.

- name: Create mysql database
  become: yes
  mysql_db: name={{ mysql_database }}

- name: Create mysql user
  become: yes
  mysql_user: 
    name={{ mysql_user }} 
    password={{ mysql_password }} 
    priv=*.*:ALL

# In the next few steps WordPress gets downloaded and installed in the Apache2 directory.

- name: Downloading latest WordPress installation
  get_url: 
    url=https://wordpress.org/latest.tar.gz 
    dest=/tmp/wordpress.tar.gz
    validate_certs=no
  
- name: Extract downloaded installation
  unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/ copy=no
  become: yes

- name: Setting new root directory for WordPress
  become: yes
  lineinfile: 
    dest=/etc/apache2/sites-enabled/000-default.conf 
    regexp="(.)+DocumentRoot /var/www/html"
    line="DocumentRoot /var/www/wordpress"
  notify:
    - restart apache

- name: Creating new config file by copying of existing sample file
  command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php creates=/var/www/wordpress/wp-config.php
  become: yes

# A user, database and password for WordPress gets set up, to allow data from the web application to be stored.

- name: Setting MySQL username
  become: yes
  replace:
    path: "/var/www/wordpress/wp-config.php"
    regexp: "(.*)username_here(.*)$"
    replace: '\1{{ mysql_user }}\2'

- name: Setting MySQL database
  become: yes
  replace:
    path: "/var/www/wordpress/wp-config.php"
    regexp: "(.*)database_name_here(.*)$"
    replace: '\1{{ mysql_database }}\2'

- name: Setting MySQL password
  become: yes
  replace:
    path: "/var/www/wordpress/wp-config.php"
    regexp: "(.*)password_here(.*)$"
    replace: '\g<1>{{ mysql_password }}\g<2>'

# To finish off,the Apache2 server will gain increased security.

- name: Setup Apache2 security, hide Apache and OS version
  become: yes
  replace: 
     path: /etc/apache2/conf-enabled/security.conf
     regexp: "ServerSignature.*"
     replace: 'ServerSignature Off'

- name: Setup Apache2 security, hide Apache and OS version
  become: yes
  replace: 
     path: /etc/apache2/conf-enabled/security.conf
     regexp: "(.*)OS"
     replace: '\g<1>Prod'

- name: Setup Apache2 security, check and/or disable TraceEnable
  become: yes
  replace: 
     path: /etc/apache2/conf-enabled/security.conf
     regexp: "TraceEnable (.*)"
     replace: 'TraceEnable \g<1>'

- name: Setup Apache2 security, hide Directory Listing
  become: yes
  replace: 
     path: /etc/apache2/apache2.conf
     regexp: "(.*)Indexes"
     replace: '\g<1>-Indexes'

- name: Setup Apache2 security, hide FollowSymLinks
  become: yes
  replace: 
     path: /etc/apache2/apache2.conf
     regexp: "(.*)FollowSymLinks"
     replace: '\g<1>-FollowSymLinks'

- name: Setup Apache2 security, installing mod_security and mod_evasive
  become: yes
  apt:
    name: 
      - libapache2-mod-security2
      - libapache2-mod-evasive

